vim.cmd([[ unmenu PopUp.How-to\ disable\ mouse ]])

vim.cmd([[ amenu PopUp.LSP:\ Go\ to\ definition <cmd>lua vim.lsp.buf.definition()<cr> ]])
vim.cmd([[ amenu PopUp.LSP:\ Go\ to\ implementations <cmd>lua vim.lsp.buf.implementation()<cr> ]])
vim.cmd([[ amenu PopUp.LSP:\ Go\ to\ references <cmd>lua vim.lsp.buf.references()<cr> ]])
vim.cmd([[ amenu PopUp.LSP:\ Rename <cmd>lua vim.lsp.buf.rename()<cr> ]])
vim.cmd([[ amenu PopUp.LSP:\ Open\ diagnostics <cmd>Trouble<cr> ]])
vim.cmd([[ amenu PopUp.LSP:\ Enable\ diagnostics <cmd>lua vim.diagnostic.enable()<cr> ]])
vim.cmd([[ amenu PopUp.LSP:\ Disable\ diagnostics <cmd>lua vim.diagnostic.disable()<cr> ]])
vim.cmd([[ amenu PopUp.LSP:\ Format\ file <cmd>lua vim.lsp.buf.format({async = true})<cr> ]])
vim.cmd([[ amenu PopUp.-2- <Nop> ]])
vim.cmd([[ amenu PopUp.Git:\ Add\ file <cmd>Gwrite!<cr> ]])
vim.cmd([[ amenu PopUp.Git:\ Unstage\ file <cmd>Git reset -- %<cr> ]])
vim.cmd([[ amenu PopUp.Git:\ Commit <cmd>Git commit<cr> ]])
vim.cmd([[ amenu PopUp.-3- <Nop> ]])
vim.cmd([[ amenu PopUp.Git\ conflict:\ Choose\ ours <cmd>GitConflictChooseOurs<cr> ]])
vim.cmd([[ amenu PopUp.Git\ conflict:\ Choose\ theirs <cmd>GitConflictChooseTheirs<cr> ]])
vim.cmd([[ amenu PopUp.Git\ conflict:\ Choose\ both <cmd>GitConflictChooseBoth<cr> ]])
vim.cmd([[ amenu PopUp.Git\ conflict:\ Choose\ none <cmd>GitConflictChooseNone<cr> ]])
vim.cmd([[ amenu PopUp.Git\ conflict:\ Next <cmd>GitConflictNextConflict<cr> ]])
vim.cmd([[ amenu PopUp.Git\ conflict:\ Previous <cmd>GitConflictPrevConflict<cr> ]])
